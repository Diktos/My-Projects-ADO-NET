<Application x:Class="Cafe.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Cafe"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ControlTemplate x:Key="RoundedButtonTemplate" TargetType="{x:Type Button}">
            <Border x:Name="border" 
                   CornerRadius="5" 
                   BorderBrush="{TemplateBinding BorderBrush}" 
                   BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <Style TargetType="Button" >
            <!--Default Button content to be the Text provided from the Command.-->
            <Setter Property="Content" 
         Value="{Binding RelativeSource={RelativeSource Self}, 
          Path=Command.Text}"/>
            <Setter Property="Template" Value="{StaticResource RoundedButtonTemplate}"/>
        </Style>

        

        <!--<Style x:Key="RoundedTextBoxStyle" TargetType="TextBox">
            <Setter Property="Template">
                --><!--Встановлюємо новий шаблон для TextBox--><!--
                <Setter.Value>
                    --><!--Встановлюємо значення для проперті шаблону TextBox--><!--
                    <ControlTemplate TargetType="TextBox">
                        --><!--Визначає сам шаблон для TextBox--><!--
                        <Grid>
                            <Border  
                     Background="White" 
                     BorderBrush="Black" 
                     BorderThickness="1" 
                     CornerRadius="15"
                     Padding="5">
                                <ScrollViewer
                 x:Name="PART_ContentHost"
                 Margin="4"
                 HorizontalAlignment="Left"
                 VerticalAlignment="Center"
                 FontSize="15"
                             />
                            </Border>
                            <TextBlock
             x:Name="searchText"
             Margin="10"
             HorizontalAlignment="Left"
             VerticalAlignment="Center"
             FontSize="18"
             Foreground="Gray"
             IsEnabled="False"
             Text="🔍 Search" 
             Visibility="Visible"
                         />
                        </Grid>
                        --><!-- Використовуємо Trigger для перевірки TextBox.Text --><!--
                        <ControlTemplate.Triggers>
                            <Trigger Property="Text" Value="">
                                <Setter TargetName="searchText" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="Text" Value="{x:Null}">
                                <Setter TargetName="searchText" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="Text" Value="{x:Static system:String.Empty}">
                                <Setter TargetName="searchText" Property="Visibility" Value="Visible" />
                            </Trigger>
                            --><!-- Якщо TextBox має текст, приховуємо TextBlock --><!--
                            <Trigger Property="Text" Value=" ">
                                <Setter TargetName="searchText" Property="Visibility" Value="Hidden" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

    </Application.Resources>
</Application>
